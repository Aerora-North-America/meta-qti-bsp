ANGSTROM_GCC_VERSION = "4.5"
ANGSTROM_BINUTILS_VERSION_armv7a = "2.21"
ANGSTROM_BINUTILS_VERSION_armv7a-hardfp = "2.21"

MACHINE_KERNEL_VERSION ?= "3.0.8-perf"
__MACHINE_KERNEL_VERSION := "${MACHINE_KERNEL_VERSION}"

include conf/distro/angstrom-2010.x.conf

DISTRO_NAME = "msm"

PREFERRED_PROVIDER_virtual/kernel ?= "linux-msm"
PREFERRED_PROVIDERS+= "virtual/bootloader:lk"
MACHINE_KERNEL_VERSION = "${__MACHINE_KERNEL_VERSION}"

PREFERRED_VERSION_xserver-common = "1.34"
PREFERRED_VERSION_xserver-nodm-init = "2.0"
PREFERRED_VERSION_xserver-xorg = "1.9.4"
PREFERRED_VERSION_mesa          = "7.9.1"
PREFERRED_VERSION_mesa-dri      = "7.9.1"
PREFERRED_VERSION_mesa-xlib     = "7.9.1"

IMAGE_ROOTFS_SIZE = 360448

# Hatstand!  This prevents bitbake from building the native version of libxcb-dri2
PREFERRED_PROVIDER_libxcb = "libxcb"
PREFERRED_PROVIDERS += "libxcb:libxcb"

ASSUME_PROVIDED += "help2man-native"

# What kind of images do we want?
IMAGE_FSTYPES = "ext3"
IMAGE_FSTYPES += "ext4"
IMAGE_FSTYPES += "fastboot"
#IMAGE_FSTYPES += "tar"
#IMAGE_FSTYPES += "yaffs2"

# bitbake.conf has 'EXTRA_IMAGECMD_yaffs2 = "1"', which doesn't doesn't work
# with the mkyaffs2image in use.
EXTRA_IMAGECMD_yaffs2 = ""

#
# TEMPORARY fastboot image stuff
#

IMAGE_DEPENDS_fastboot = "mkbootimg-native virtual/kernel"
IMAGE_CMD_fastboot = "${STAGING_BINDIR_NATIVE}/mkbootimg --kernel ${STAGING_KERNEL_DIR}/Image --ramdisk /dev/null --ramdisk_offset $(awk --non-decimal-data '/ _end/ {end="0x" $1} /_stext/ {beg="0x" $1} END {size1=end-beg+4096; size=and(size1,compl(4095)); printf("%#x",size)}' ${STAGING_KERNEL_DIR}/System.map-${MACHINE_KERNEL_VERSION}) --cmdline 'root=${MACHINE_ROOTDEV} rw init=/sbin/init --verbose loglevel=7 rootwait console=${MACHINE_CONSOLE} no_console_suspend=1 androidboot.hardware=qcom log_buf_len=262144' --base ${MACHINE_KERNEL_BASE} ${EXTRA_IMAGECMD} --pagesize ${MACHINE_FLASH_PAGE_SIZE} --output ${DEPLOY_DIR_IMAGE}/${IMAGE_NAME}.rootfs.fastboot"


#
# END fastboot image stuff
#
