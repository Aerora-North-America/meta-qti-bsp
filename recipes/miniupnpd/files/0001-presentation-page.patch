From 54ef0d53b83c394b1627581fe963c602f969b194 Mon Sep 17 00:00:00 2001
From: Tyler Wear <twear@codeaurora.org>
Date: Thu, 31 Jul 2014 11:13:30 -0700
Subject: [PATCH 1/1] presentation-page

---
 upnphttp.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)
 mode change 100644 => 100755 upnphttp.c

diff --git a/upnphttp.c b/upnphttp.c
old mode 100644
new mode 100755
index f869fe5..dcbfb13
--- a/upnphttp.c
+++ b/upnphttp.c
@@ -28,6 +28,7 @@
 #include "upnpsoap.h"
 #include "upnpevents.h"
 #include "upnputils.h"
+#include "upnpglobalvars.h"
 
 #ifdef ENABLE_HTTPS
 #include <openssl/err.h>
@@ -690,6 +691,26 @@ ProcessHTTPUnSubscribe_upnphttp(struct upnphttp * h, const char * path)
 }
 #endif
 
+#ifdef QCMAP
+static void
+SendResp_presentation(struct upnphttp * h)
+{
+	char body[1024];
+	int l;
+	h->respflags = FLAG_HTML;
+
+	l = snprintf(body, sizeof(body),
+		"<HTML><HEAD><TITLE>UPnP</TITLE></HEAD>"
+		"<BODY><div style=\"text-align: center\">"
+                "<h3> UPnP is Running!</h3>"
+		"</BODY></HTML>\r\n");
+
+	BuildResp_upnphttp(h, body, l);
+	SendResp_upnphttp(h);
+	CloseSocket_upnphttp(h);
+}
+#endif
+
 /* Parse and process Http Query
  * called once all the HTTP headers have been received,
  * so it is guaranteed that h->req_buf contains the \r\n\r\n
@@ -783,6 +804,12 @@ ProcessHttpQuery_upnphttp(struct upnphttp * h)
 			return;
 		}
 #endif
+#ifdef QCMAP
+		else if(0 == memcmp(HttpUrl, presentationurl, 19)) {
+			SendResp_presentation(h);
+			return;
+		}
+#endif
 		syslog(LOG_NOTICE, "%s not found, responding ERROR 404", HttpUrl);
 		Send404(h);
 	}
-- 
1.8.2.1

